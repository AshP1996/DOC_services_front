{"ast":null,"code":"import axios from \"axios\";\n\n// const API_BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// // Get doctor profile\n// export const getDoctorProfile = async (doctorId) => {\n//   try {\n//     const token = localStorage.getItem(\"accessToken\"); // Retrieve token from localStorage\n//     if (!token) {\n//       throw new Error(\"Access token is missing.\");\n//     }\n\n//     const response = await axios.get(`${API_BASE_URL}/doctor/doctor-profiles/${doctorId}/`, {\n//       headers: {\n//         Authorization: `Bearer ${token}`, // Add the Bearer token\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching profile:\", error);\n//     throw error.response?.data || \"An error occurred while fetching the profile.\";\n//   }\n// };\n\n// export const getDoctorProfile = async () => {\n//   try {\n//     const token = localStorage.getItem(\"accessToken\");\n//     const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\n//     if (!token || !userId) {\n//       throw new Error(\"Missing token or user ID.\");\n//     }\n\n//     const response = await axios.get(`http://127.0.0.1:8000/api/doctor/doctor-profiles/${userId}/`, {\n//       headers: {\n//         Authorization: `Bearer ${token}`, // Include token in Authorization header\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching profile:\", error);\n//     throw error.response?.data || \"An error occurred while fetching the profile.\";\n//   }\n// };\n\nexport const getDoctorProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"accessToken\"); // Get the token\n    const userId = localStorage.getItem(\"userId\"); // Get the userId\n\n    console.log(\"Token:\", token); // Log the token to check if it's retrieved properly\n    console.log(\"User ID:\", userId); // Log the userId to check if it's retrieved properly\n\n    // Throw an error if token or userId are missing\n    if (!token || !userId) {\n      console.error(\"Error: Missing token or user ID.\");\n      throw new Error(\"Missing token or user ID.\");\n    }\n\n    // Make the API request to fetch the profile\n    console.log(`Fetching profile for user ID: ${userId}`); // Log the userId before making the API call\n\n    const response = await axios.get(`http://127.0.0.1:8000/api/doctor/doctor-profiles/${userId}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        // Pass token in Authorization header\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Profile data fetched successfully:\", response.data); // Log the successful response data\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching profile:\", error); // Log the error message\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"An error occurred while fetching the profile.\";\n  }\n};","map":{"version":3,"names":["axios","getDoctorProfile","token","localStorage","getItem","userId","console","log","error","Error","response","get","headers","Authorization","data","_error$response"],"sources":["/home/developer/Documents/temp/react/my-app/src/dashboard/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// const API_BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// // Get doctor profile\n// export const getDoctorProfile = async (doctorId) => {\n//   try {\n//     const token = localStorage.getItem(\"accessToken\"); // Retrieve token from localStorage\n//     if (!token) {\n//       throw new Error(\"Access token is missing.\");\n//     }\n\n//     const response = await axios.get(`${API_BASE_URL}/doctor/doctor-profiles/${doctorId}/`, {\n//       headers: {\n//         Authorization: `Bearer ${token}`, // Add the Bearer token\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching profile:\", error);\n//     throw error.response?.data || \"An error occurred while fetching the profile.\";\n//   }\n// };\n\n\n// export const getDoctorProfile = async () => {\n//   try {\n//     const token = localStorage.getItem(\"accessToken\");\n//     const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\n//     if (!token || !userId) {\n//       throw new Error(\"Missing token or user ID.\");\n//     }\n\n//     const response = await axios.get(`http://127.0.0.1:8000/api/doctor/doctor-profiles/${userId}/`, {\n//       headers: {\n//         Authorization: `Bearer ${token}`, // Include token in Authorization header\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching profile:\", error);\n//     throw error.response?.data || \"An error occurred while fetching the profile.\";\n//   }\n// };\n\nexport const getDoctorProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"accessToken\");  // Get the token\n    const userId = localStorage.getItem(\"userId\");  // Get the userId\n\n    console.log(\"Token:\", token);  // Log the token to check if it's retrieved properly\n    console.log(\"User ID:\", userId);  // Log the userId to check if it's retrieved properly\n\n    // Throw an error if token or userId are missing\n    if (!token || !userId) {\n      console.error(\"Error: Missing token or user ID.\");\n      throw new Error(\"Missing token or user ID.\");\n    }\n\n    // Make the API request to fetch the profile\n    console.log(`Fetching profile for user ID: ${userId}`);  // Log the userId before making the API call\n\n    const response = await axios.get(`http://127.0.0.1:8000/api/doctor/doctor-profiles/${userId}/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,  // Pass token in Authorization header\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    console.log(\"Profile data fetched successfully:\", response.data);  // Log the successful response data\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching profile:\", error);  // Log the error message\n    throw error.response?.data || \"An error occurred while fetching the profile.\";\n  }\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAE;IACpD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;;IAEhDE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,KAAK,CAAC,CAAC,CAAE;IAC/BI,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,MAAM,CAAC,CAAC,CAAE;;IAElC;IACA,IAAI,CAACH,KAAK,IAAI,CAACG,MAAM,EAAE;MACrBC,OAAO,CAACE,KAAK,CAAC,kCAAkC,CAAC;MACjD,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;;IAEA;IACAH,OAAO,CAACC,GAAG,CAAC,iCAAiCF,MAAM,EAAE,CAAC,CAAC,CAAE;;IAEzD,MAAMK,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oDAAoDN,MAAM,GAAG,EAAE;MAC9FO,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUX,KAAK,EAAE;QAAG;QACnC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEG,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;IACnE,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAON,KAAK,EAAE;IAAA,IAAAO,eAAA;IACdT,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAE;IAClD,MAAM,EAAAO,eAAA,GAAAP,KAAK,CAACE,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,KAAI,+CAA+C;EAC/E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}