{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000/api/dashboard\";\n\n// Fetch dashboard data (doctor or user)\nexport const fetchDashboardData = async userType => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/dashboard/`, {\n      headers: {\n        // Example: Include authorization if needed\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      },\n      params: {\n        user_type: userType\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Failed to fetch dashboard data.\";\n  }\n};\n\n// Fetch doctor profile\nexport const fetchDoctorProfile = async profileId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/doctor-profiles/${profileId}/`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}` // Ensure the token is stored after login\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Failed to fetch doctor profile.\";\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchDashboardData","userType","response","get","headers","Authorization","localStorage","getItem","params","user_type","data","error","_error$response","fetchDoctorProfile","profileId","_error$response2"],"sources":["/home/developer/Documents/temp/react/my-app/src/dashboard/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://127.0.0.1:8000/api/dashboard\";\n\n// Fetch dashboard data (doctor or user)\nexport const fetchDashboardData = async (userType) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/dashboard/`, {\n      headers: {\n        // Example: Include authorization if needed\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n      params: { user_type: userType },\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || \"Failed to fetch dashboard data.\";\n  }\n};\n\n// Fetch doctor profile\nexport const fetchDoctorProfile = async (profileId) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/doctor-profiles/${profileId}/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`, // Ensure the token is stored after login\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || \"Failed to fetch doctor profile.\";\n    }\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,qCAAqC;;AAE1D;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,aAAa,EAAE;MAC7DK,OAAO,EAAE;QACP;QACAC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC9D,CAAC;MACDC,MAAM,EAAE;QAAEC,SAAS,EAAER;MAAS;IAChC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACQ,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,iCAAiC;EACjE;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,oBAAoBe,SAAS,GAAG,EAAE;MAChFV,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE,CAAE;MAClE;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACQ,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAI,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACT,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAI,iCAAiC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}