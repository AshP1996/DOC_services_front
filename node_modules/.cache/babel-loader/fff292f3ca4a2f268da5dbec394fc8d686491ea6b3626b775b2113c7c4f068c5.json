{"ast":null,"code":"var _jsxFileName = \"/home/developer/Documents/temp/react/my-app/src/dashboard/components/DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Profile from \"./Profile\";\nimport { fetchDoctorProfile } from \"../services/api\"; // Ensure this import is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) {\n      console.warn(\"No access token found. Redirecting to login.\");\n      navigate(\"/login\");\n      return;\n    }\n    const getProfile = async () => {\n      try {\n        console.log(\"Fetching doctor profile data...\");\n        const data = await fetchDoctorProfile(1); // Use appropriate dynamic ID\n        console.log(\"Doctor profile data fetched:\", data);\n        setProfileData(data); // Store the data in state\n      } catch (error) {\n        console.error(\"Error fetching doctor profile:\", error);\n      }\n    };\n    getProfile();\n  }, [navigate]);\n  const menuItems = [{\n    name: \"Profile\",\n    path: \"profile\"\n  }, {\n    name: \"Dashboard\",\n    path: \"\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    menuItems: menuItems,\n    onMenuClick: item => navigate(`/dashboard/doctor/${item}`),\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          data: profileData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to the Doctor Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorDashboard, \"1wnB+6t9Rle9IsW4voPpqdXm3w4=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","useNavigate","Layout","Profile","fetchDoctorProfile","jsxDEV","_jsxDEV","DoctorDashboard","_s","navigate","profileData","setProfileData","token","localStorage","getItem","console","warn","getProfile","log","data","error","menuItems","name","path","onMenuClick","item","children","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/developer/Documents/temp/react/my-app/src/dashboard/components/DoctorDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Profile from \"./Profile\";\nimport { fetchDoctorProfile } from \"../services/api\";  // Ensure this import is correct\n\nconst DoctorDashboard = () => {\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState(null);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (!token) {\n      console.warn(\"No access token found. Redirecting to login.\");\n      navigate(\"/login\");\n      return;\n    }\n\n    const getProfile = async () => {\n      try {\n        console.log(\"Fetching doctor profile data...\");\n        const data = await fetchDoctorProfile(1);  // Use appropriate dynamic ID\n        console.log(\"Doctor profile data fetched:\", data);\n        setProfileData(data);  // Store the data in state\n      } catch (error) {\n        console.error(\"Error fetching doctor profile:\", error);\n      }\n    };\n    getProfile();\n  }, [navigate]);\n\n  const menuItems = [\n    { name: \"Profile\", path: \"profile\" },\n    { name: \"Dashboard\", path: \"\" },\n  ];\n\n  return (\n    <Layout menuItems={menuItems} onMenuClick={(item) => navigate(`/dashboard/doctor/${item}`)}>\n      <Routes>\n        <Route\n          path=\"/profile\"\n          element={<Profile data={profileData} />}\n        />\n        <Route\n          path=\"/\"\n          element={<h1>Welcome to the Doctor Dashboard</h1>}\n        />\n      </Routes>\n    </Layout>\n  );\n};\n\nexport default DoctorDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,kBAAkB,QAAQ,iBAAiB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,IAAI,CAAC,8CAA8C,CAAC;MAC5DP,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFF,OAAO,CAACG,GAAG,CAAC,iCAAiC,CAAC;QAC9C,MAAMC,IAAI,GAAG,MAAMf,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAE;QAC3CW,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAEC,IAAI,CAAC;QACjDR,cAAc,CAACQ,IAAI,CAAC,CAAC,CAAE;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMY,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAU,CAAC,EACpC;IAAED,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAG,CAAC,CAChC;EAED,oBACEjB,OAAA,CAACJ,MAAM;IAACmB,SAAS,EAAEA,SAAU;IAACG,WAAW,EAAGC,IAAI,IAAKhB,QAAQ,CAAC,qBAAqBgB,IAAI,EAAE,CAAE;IAAAC,QAAA,eACzFpB,OAAA,CAACP,MAAM;MAAA2B,QAAA,gBACLpB,OAAA,CAACN,KAAK;QACJuB,IAAI,EAAC,UAAU;QACfI,OAAO,eAAErB,OAAA,CAACH,OAAO;UAACgB,IAAI,EAAET;QAAY;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACFzB,OAAA,CAACN,KAAK;QACJuB,IAAI,EAAC,GAAG;QACRI,OAAO,eAAErB,OAAA;UAAAoB,QAAA,EAAI;QAA+B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACvB,EAAA,CA5CID,eAAe;EAAA,QACFN,WAAW;AAAA;AAAA+B,EAAA,GADxBzB,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}