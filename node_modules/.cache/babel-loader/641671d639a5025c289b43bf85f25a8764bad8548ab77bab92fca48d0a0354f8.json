{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8000/api/accounts\";\nconst handleError = error => {\n  var _error$response, _error$response$data;\n  const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"An error occurred\";\n  console.error(\"API Error:\", errorMessage); // Log for debugging\n  throw new Error(errorMessage);\n};\nexport const signup = async data => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/signup/`, data);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\nexport const login = async data => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/`, data);\n    // Store the access and refresh tokens, and user data in localStorage/sessionStorage or in state\n    const {\n      access,\n      refresh,\n      user\n    } = response.data;\n    localStorage.setItem(\"accessToken\", access); // Save access token\n    localStorage.setItem(\"refreshToken\", refresh); // Save refresh token\n    localStorage.setItem(\"user\", JSON.stringify(user)); // Save user information\n\n    // Return response data\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Helper to set Authorization header for future API calls\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// A utility to get the stored user details\nexport const getUser = () => {\n  const user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n};\n\n// A utility to get the stored access token\nexport const getAccessToken = () => {\n  return localStorage.getItem(\"accessToken\");\n};\n\n// A utility to get the stored refresh token\nexport const getRefreshToken = () => {\n  return localStorage.getItem(\"refreshToken\");\n};","map":{"version":3,"names":["axios","API_BASE_URL","handleError","error","_error$response","_error$response$data","errorMessage","response","data","detail","console","Error","signup","post","login","access","refresh","user","localStorage","setItem","JSON","stringify","setAuthToken","token","defaults","headers","common","getUser","getItem","parse","getAccessToken","getRefreshToken"],"sources":["/home/developer/Documents/temp/react/my-app/src/accounts/components/Login.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8000/api/accounts\";\n\nconst handleError = (error) => {\n  const errorMessage = error.response?.data?.detail || \"An error occurred\";\n  console.error(\"API Error:\", errorMessage); // Log for debugging\n  throw new Error(errorMessage);\n};\n\nexport const signup = async (data) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/signup/`, data);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nexport const login = async (data) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/`, data);\n    // Store the access and refresh tokens, and user data in localStorage/sessionStorage or in state\n    const { access, refresh, user } = response.data;\n    localStorage.setItem(\"accessToken\", access);  // Save access token\n    localStorage.setItem(\"refreshToken\", refresh); // Save refresh token\n    localStorage.setItem(\"user\", JSON.stringify(user)); // Save user information\n\n    // Return response data\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Helper to set Authorization header for future API calls\nexport const setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// A utility to get the stored user details\nexport const getUser = () => {\n  const user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n};\n\n// A utility to get the stored access token\nexport const getAccessToken = () => {\n  return localStorage.getItem(\"accessToken\");\n};\n\n// A utility to get the stored refresh token\nexport const getRefreshToken = () => {\n  return localStorage.getItem(\"refreshToken\");\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,oCAAoC;AAEzD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,oBAAA;EAC7B,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBI,MAAM,KAAI,mBAAmB;EACxEC,OAAO,CAACP,KAAK,CAAC,YAAY,EAAEG,YAAY,CAAC,CAAC,CAAC;EAC3C,MAAM,IAAIK,KAAK,CAACL,YAAY,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMM,MAAM,GAAG,MAAOJ,IAAI,IAAK;EACpC,IAAI;IACF,MAAMD,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAAC,GAAGZ,YAAY,UAAU,EAAEO,IAAI,CAAC;IAClE,OAAOD,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdD,WAAW,CAACC,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMW,KAAK,GAAG,MAAON,IAAI,IAAK;EACnC,IAAI;IACF,MAAMD,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAAC,GAAGZ,YAAY,SAAS,EAAEO,IAAI,CAAC;IACjE;IACA,MAAM;MAAEO,MAAM;MAAEC,OAAO;MAAEC;IAAK,CAAC,GAAGV,QAAQ,CAACC,IAAI;IAC/CU,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,MAAM,CAAC,CAAC,CAAE;IAC9CG,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,OAAO,CAAC,CAAC,CAAC;IAC/CE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEpD;IACA,OAAOV,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdD,WAAW,CAACC,KAAK,CAAC;EACpB;AACF,CAAC;;AAED;AACA,OAAO,MAAMmB,YAAY,GAAIC,KAAK,IAAK;EACrC,IAAIA,KAAK,EAAE;IACTvB,KAAK,CAACwB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACpE,CAAC,MAAM;IACL,OAAOvB,KAAK,CAACwB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAC3B,MAAMV,IAAI,GAAGC,YAAY,CAACU,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOX,IAAI,GAAGG,IAAI,CAACS,KAAK,CAACZ,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;;AAED;AACA,OAAO,MAAMa,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOZ,YAAY,CAACU,OAAO,CAAC,aAAa,CAAC;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOb,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}