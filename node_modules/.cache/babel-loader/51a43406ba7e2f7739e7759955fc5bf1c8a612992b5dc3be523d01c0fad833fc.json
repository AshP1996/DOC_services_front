{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// Get doctor profile\nexport const getDoctorProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"accessToken\"); // Get the token\n    const userId = localStorage.getItem(\"userId\"); // Get the user ID\n\n    // Log token and user ID to verify they are being retrieved correctly\n    console.log(\"Token retrieved:\", token);\n    console.log(\"User ID retrieved:\", userId);\n    if (!token || !userId) {\n      console.error(\"Error: Missing token or user ID.\");\n      throw new Error(\"Missing token or user ID.\");\n    }\n\n    // Log the API endpoint and token to ensure the correct URL and Authorization header\n    const profileUrl = `${API_BASE_URL}/doctor/doctor-profiles/${userId}/`;\n    console.log(`Fetching profile from URL: ${profileUrl}`);\n    const response = await axios.get(profileUrl, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        // Authorization header\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // Log the response to check if the data is being fetched correctly\n    console.log(\"Profile data fetched successfully:\", response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    // Log any errors that occur\n    console.error(\"Error fetching profile:\", error.message);\n    if (error.response) {\n      console.error(\"API Error Response:\", error.response.data);\n    } else {\n      console.error(\"Error details:\", error);\n    }\n\n    // Throw a custom error message or response data\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Failed to fetch the profile. Please check your API or network.\";\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getDoctorProfile","token","localStorage","getItem","userId","console","log","error","Error","profileUrl","response","get","headers","Authorization","data","_error$response","message"],"sources":["/home/developer/Documents/temp/react/my-app/src/dashboard/services/api.js"],"sourcesContent":["import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// Get doctor profile\nexport const getDoctorProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"accessToken\");  // Get the token\n    const userId = localStorage.getItem(\"userId\");  // Get the user ID\n\n    // Log token and user ID to verify they are being retrieved correctly\n    console.log(\"Token retrieved:\", token);\n    console.log(\"User ID retrieved:\", userId);\n\n    if (!token || !userId) {\n      console.error(\"Error: Missing token or user ID.\");\n      throw new Error(\"Missing token or user ID.\");\n    }\n\n    // Log the API endpoint and token to ensure the correct URL and Authorization header\n    const profileUrl = `${API_BASE_URL}/doctor/doctor-profiles/${userId}/`;\n    console.log(`Fetching profile from URL: ${profileUrl}`);\n    \n    const response = await axios.get(profileUrl, {\n      headers: {\n        Authorization: `Bearer ${token}`,  // Authorization header\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    // Log the response to check if the data is being fetched correctly\n    console.log(\"Profile data fetched successfully:\", response.data);\n    return response.data;\n  } catch (error) {\n    // Log any errors that occur\n    console.error(\"Error fetching profile:\", error.message);\n\n    if (error.response) {\n      console.error(\"API Error Response:\", error.response.data);\n    } else {\n      console.error(\"Error details:\", error);\n    }\n\n    // Throw a custom error message or response data\n    throw error.response?.data || \"Failed to fetch the profile. Please check your API or network.\";\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAE;IACpD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;;IAEhD;IACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,KAAK,CAAC;IACtCI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,MAAM,CAAC;IAEzC,IAAI,CAACH,KAAK,IAAI,CAACG,MAAM,EAAE;MACrBC,OAAO,CAACE,KAAK,CAAC,kCAAkC,CAAC;MACjD,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;;IAEA;IACA,MAAMC,UAAU,GAAG,GAAGV,YAAY,2BAA2BK,MAAM,GAAG;IACtEC,OAAO,CAACC,GAAG,CAAC,8BAA8BG,UAAU,EAAE,CAAC;IAEvD,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACF,UAAU,EAAE;MAC3CG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUZ,KAAK,EAAE;QAAG;QACnC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACAI,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEI,QAAQ,CAACI,IAAI,CAAC;IAChE,OAAOJ,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA,IAAAQ,eAAA;IACd;IACAV,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACS,OAAO,CAAC;IAEvD,IAAIT,KAAK,CAACG,QAAQ,EAAE;MAClBL,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,QAAQ,CAACI,IAAI,CAAC;IAC3D,CAAC,MAAM;MACLT,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;;IAEA;IACA,MAAM,EAAAQ,eAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBD,IAAI,KAAI,gEAAgE;EAChG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}