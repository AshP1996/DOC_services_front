{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// Fetch dashboard data\nexport const fetchDashboardData = async userType => {\n  try {\n    const endpoint = userType === \"doctor\" ? \"dashboard/doctor/\" : \"dashboard/user/\";\n    const response = await axios.get(`${BASE_URL}/${endpoint}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"Failed to fetch dashboard data.\";\n  }\n};\n\n// Fetch doctor profile data\nexport const fetchDoctorProfile = async profileId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/doctor-profiles/`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        Accept: 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Failed to fetch doctor profile.\";\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","fetchDashboardData","userType","endpoint","response","get","headers","Authorization","localStorage","getItem","data","error","_error$response","fetchDoctorProfile","profileId","Accept","_error$response2"],"sources":["/home/developer/Documents/temp/react/my-app/src/dashboard/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n// Fetch dashboard data\nexport const fetchDashboardData = async (userType) => {\n  try {\n    const endpoint = userType === \"doctor\" ? \"dashboard/doctor/\" : \"dashboard/user/\";\n    const response = await axios.get(`${BASE_URL}/${endpoint}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || \"Failed to fetch dashboard data.\";\n  }\n};\n\n// Fetch doctor profile data\nexport const fetchDoctorProfile = async (profileId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/doctor-profiles/`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        Accept: 'application/json'\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response?.data || \"Failed to fetch doctor profile.\";\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAGD,QAAQ,KAAK,QAAQ,GAAG,mBAAmB,GAAG,iBAAiB;IAChF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,IAAIG,QAAQ,EAAE,EAAE;MAC1DG,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC9D;IACF,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,iCAAiC;EACjE;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,SAAS,IAAK;EACrD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,mBAAmB,EAAE;MAC/DM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,EAAE;QAC9DM,MAAM,EAAE;MACV;IACF,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACP,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAI,iCAAiC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}